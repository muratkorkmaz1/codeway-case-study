
image: docker:latest


stages:

  - build
  - deploy_stage
  - deploy_prod

variables:
  # Docker Hub erişim bilgileri
  DOCKER_REGISTRY: "docker.io"
  DOCKER_IMAGE: "muratkorkmaz24/nodejs-express-mysql"
  HELM_CHART_DIR: "./helm-chart"  # Helm chart dosya yolu

  # Stage ortamı için Kubernetes bilgileri
  KUBE_CONTEXT_STAGE: "minikube"
  KUBE_NAMESPACE_STAGE: "nodejs-app-stage"
  ARGOCD_APP_NAME_STAGE: "nodejs-express-mysql"

  # Prod ortamı için Kubernetes bilgileri
  KUBE_CONTEXT_PROD: "minikube"
  KUBE_NAMESPACE_PROD: "nodejs-app"
  ARGOCD_APP_NAME_PROD: "nodejs-express-mysql-stage"
  KUBECONFIG_FILE_CONTENT: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL1VzZXJzL211cmF0a29ya21hei8ubWluaWt1YmUvY2EuY3J0CiAgICBleHRlbnNpb25zOgogICAgLSBleHRlbnNpb246CiAgICAgICAgbGFzdC11cGRhdGU6IE1vbiwgMDIgRGVjIDIwMjQgMjM6MzE6MDUgKzAzCiAgICAgICAgcHJvdmlkZXI6IG1pbmlrdWJlLnNpZ3MuazhzLmlvCiAgICAgICAgdmVyc2lvbjogdjEuMzQuMAogICAgICBuYW1lOiBjbHVzdGVyX2luZm8KICAgIHNlcnZlcjogaHR0cHM6Ly8xMjcuMC4wLjE6NjQ3NDkKICBuYW1lOiBtaW5pa3ViZQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbWluaWt1YmUKICAgIGV4dGVuc2lvbnM6CiAgICAtIGV4dGVuc2lvbjoKICAgICAgICBsYXN0LXVwZGF0ZTogTW9uLCAwMiBEZWMgMjAyNCAyMzozMTowNSArMDMKICAgICAgICBwcm92aWRlcjogbWluaWt1YmUuc2lncy5rOHMuaW8KICAgICAgICB2ZXJzaW9uOiB2MS4zNC4wCiAgICAgIG5hbWU6IGNvbnRleHRfaW5mbwogICAgbmFtZXNwYWNlOiBkZWZhdWx0CiAgICB1c2VyOiBtaW5pa3ViZQogIG5hbWU6IG1pbmlrdWJlCmN1cnJlbnQtY29udGV4dDogbWluaWt1YmUKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBtaW5pa3ViZQogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGU6IC9Vc2Vycy9tdXJhdGtvcmttYXovLm1pbmlrdWJlL3Byb2ZpbGVzL21pbmlrdWJlL2NsaWVudC5jcnQKICAgIGNsaWVudC1rZXk6IC9Vc2Vycy9tdXJhdGtvcmttYXovLm1pbmlrdWJlL3Byb2ZpbGVzL21pbmlrdWJlL2NsaWVudC5rZXkK"
  

services:
  - name: docker:20.10.7-dind
    alias: docker

before_script:
  - docker info
  - apk add --no-cache curl bash
  - curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  - helm version
  - which helm
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - chmod +x kubectl
  - mv kubectl /usr/local/bin/
  - kubectl version --client
  - mkdir -p ~/.kube
  - echo "$KUBECONFIG_FILE_CONTENT" > ~/.kube/config
  - kubectl config view

# Build Docker image
build_image:
  stage: build
  script:
    - echo "Building Docker image"
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHA .
    - echo "EbuA7Trqq!" | docker login -u "muratkorkmaz24" --password-stdin
    - docker images 
    - docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE:latest
    - docker images
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHA
  only:
    - staging
    - main  # Hem staging hem de main branch'leri için geçerli


# Deploy to Kubernetes (Stage ortamı için)
deploy_stage:
  stage: deploy_stage
  script:
    - echo "Deploying to Kubernetes (Stage) using Helm"
    - helm upgrade --install nodejs-express-mysql-stage $HELM_CHART_DIR --namespace $KUBE_NAMESPACE_STAGE --set image.tag=$CI_COMMIT_SHA --context $KUBE_CONTEXT_STAGE
  only:
    - staging  # Sadece staging branch'inde çalışacak

# Deploy to Kubernetes (Prod ortamı için)
deploy_prod:
  stage: deploy_prod
  script:
    - kubectl config view
    - kubectl get nodes --kube-context $KUBE_CONTEXT_STAGE
    - echo "Deploying to Kubernetes (Prod) using Helm"
    - kubectl get nodes
    - helm upgrade --install nodejs-express-mysql $HELM_CHART_DIR --namespace $KUBE_NAMESPACE_PROD --set image.tag=$CI_COMMIT_SHA --context $KUBE_CONTEXT_PROD
  only:
    - main  # Sadece main branch'inde çalışacak
